[build-system]
requires = ["flit_core >=3.5,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "carve"
dynamic = ["version"]
description = "Source code software debloating tool"
readme = "README.md"
dependencies = ["pyyaml", "libcst"]
requires-python = ">=3.8"

[project.optional-dependencies]
doc = []
test = ["pytest", "pytest-cov", "pretend", "coverage[toml]"]
lint = [
    "black ~= 23.0",
    # NOTE: ruff is under active development, so we pin conservatively here
    # and let Dependabot periodically perform this update.
    "ruff < 0.0.293",
    "mypy >= 1.0",
    "types-html5lib",
    "types-requests",
    "types-toml",
    "interrogate",
]
dev = ["carve[doc,test,lint]", "twine", "wheel", "build"]

[project.scripts]
"carve" = "carve.carve:main"


[tool.flit.module]
name = "carve"

[tool.black]
line-length = 100

[tool.coverage.run]
# don't attempt code coverage for the CLI entrypoints
omit = ["src/carve/carve.py"]

[tool.mypy]
mypy_path = "src"
packages = "carve"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.ruff]
line-length = 100
select = ["ALL"]
target-version = "py38"

[tool.ruff.per-file-ignores]
"src/carve/carve.py" = [
    "T201", # allow `print` in cli module
]
"test/**/*.py" = [
    "D",    # no docstrings in tests
    "S101", # asserts are expected in tests
]

[tool.interrogate]
# don't enforce documentation coverage for packaging, testing, the virtual
# environment, or the CLI (which is documented separately).
exclude = ["env", "test", "src/carve/carve.py"]
ignore-semiprivate = true
fail-under = 100
